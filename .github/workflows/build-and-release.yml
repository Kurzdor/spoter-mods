name: Build and Release

on:
  push:
    branches:
      - master  # Workflow –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—É—à–µ –≤ –≤–µ—Ç–∫—É master

jobs:
  build:
    runs-on: windows-latest  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Windows –¥–ª—è —Å–±–æ—Ä–∫–∏

    steps:
      # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 50  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∫–æ–º–º–∏—Ç–æ–≤
        id: checkout
        shell: pwsh
        run: |
          Write-Host "‚úÖ Repository checked out successfully."
          Write-Host "Commit hash: $(git rev-parse HEAD)"
          Write-Host "Last 5 commits:"
          git log -5 --oneline

      # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 2.7 —á–µ—Ä–µ–∑ Chocolatey
      - name: Install Python 2.7
        id: install-python
        shell: pwsh
        run: |
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Python
          if (Get-Command python -ErrorAction SilentlyContinue) {
              Write-Host "‚úÖ Python is already installed."
              python --version
              exit 0
          }

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Chocolatey
          if (Get-Command choco -ErrorAction SilentlyContinue) {
              Write-Host "‚úÖ Chocolatey is already installed."
          } else {
              Write-Host "‚ùå Chocolatey is not installed. Installing now..."
              Set-ExecutionPolicy Bypass -Scope Process -Force
              [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
              iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
              Write-Host "‚úÖ Chocolatey installed successfully."
          }

          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 2.7
          Write-Host "üöÄ Installing Python 2.7..."
          choco install python2 -y
          Write-Host "‚úÖ Python 2.7 installed successfully."

          # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
          Write-Host "üîÑ Refreshing environment variables..."
          refreshenv
          Write-Host "‚úÖ Environment variables refreshed."

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Python —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∏ –¥–æ—Å—Ç—É–ø–µ–Ω
          Write-Host "üîç Checking Python installation..."
          python --version
          if ($LASTEXITCODE -eq 0) {
              Write-Host "‚úÖ Python is available in PATH."
          } else {
              Write-Host "‚ùå Python is not available in PATH. Please check the installation."
              exit 1
          }

          # –õ–æ–≥–∏—Ä—É–µ–º PATH –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          Write-Host "üìÇ Current PATH:"
          $env:PATH -split ";" | ForEach-Object { Write-Host "  $_" }

      # –®–∞–≥ 3: –ü—Ä–∏–º–µ—Ä —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ (–∑–∞–≥–ª—É—à–∫–∞)
      - name: Debug step
        id: debug-step
        shell: pwsh
        run: |
          Write-Host "üöÄ This is a debug step."
          Write-Host "üìÇ Current working directory: $(Get-Location)"
          Write-Host "üìÇ List of files in the repository:"
          Get-ChildItem -Recurse | ForEach-Object { Write-Host "  $($_.FullName)" }