name: Build and Release

on:
  push:
    branches:
      - master # Workflow –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø—É—à–µ –≤ –≤–µ—Ç–∫—É master

jobs:
  build:
    runs-on: windows-latest # –ò—Å–ø–æ–ª—å–∑—É–µ–º Windows –¥–ª—è —Å–±–æ—Ä–∫–∏

    steps:
      # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 50 # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∫–æ–º–º–∏—Ç–æ–≤

      # –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—É—à–µ
      - name: Get push details
        id: push-details
        shell: pwsh
        run: |
          # –ü–æ–ª—É—á–∞–µ–º —Ö—ç—à –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞
          $commitHash = git rev-parse HEAD
          Write-Host "‚úÖ Commit hash: $commitHash"

          # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø—É—à–∞ (—Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞)
          $commitMessage = git log -1 --pretty=%B
          Write-Host "‚úÖ Commit message: $commitMessage"

          # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞
          $escapedCommitMessage = $commitMessage -replace '"', '`"' -replace "'", "''" -replace "`n", " " -replace "`r", " "
          Write-Host "‚úÖ Escaped commit message: $escapedCommitMessage"

          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          $changedFiles = git diff --name-only HEAD^ HEAD
          Write-Host "‚úÖ Changed files:"
          $changedFiles | ForEach-Object { Write-Host " $_" }

          # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
          echo "commit_hash=$commitHash" >> $env:GITHUB_OUTPUT
          echo "commit_message=$escapedCommitMessage" >> $env:GITHUB_OUTPUT
          echo "changed_files=$($changedFiles -join ';')" >> $env:GITHUB_OUTPUT

      # –®–∞–≥ 3: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 2.7
      - name: Set up Python 2.7
        uses: LizardByte/setup-python-action@master
        with:
          python-version: '2.7' # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –≤–µ—Ä—Å–∏—é Python

      # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
      - name: Check commit message for release keywords
        id: check_commit
        shell: pwsh
        run: |
          $commitMessage = "${{ steps.push-details.outputs.commit_message }}"
          if ($commitMessage -match 'release') {
            Write-Host "Is release: true"
            echo "is_release=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "Is release: false"
            echo "is_release=false" >> $env:GITHUB_OUTPUT
          }
          if ($commitMessage -match 'all') {
            Write-Host "Is all: true"
            echo "is_all=true" >> $env:GITHUB_OUTPUT
          } else {
            Write-Host "Is all: false"
            echo "is_all=false" >> $env:GITHUB_OUTPUT
          }

      # –®–∞–≥ 5: –î–µ–±–∞–≥ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
      - name: Debug and test
        id: debug-test
        shell: pwsh
        run: |
          # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤
          Write-Host "üöÄ Debug information:"
          Write-Host "Commit hash: ${{ steps.push-details.outputs.commit_hash }}"
          Write-Host "Commit message: ${{ steps.push-details.outputs.commit_message }}"
          Write-Host "Changed files: ${{ steps.push-details.outputs.changed_files }}"
          Write-Host "Is release: ${{ steps.check_commit.outputs.is_release }}"
          Write-Host "Is all: ${{ steps.check_commit.outputs.is_all }}"

          # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ PowerShell
          $commitMessage = "${{ steps.push-details.outputs.commit_message }}"
          Write-Host "‚úÖ Escaped commit message in PowerShell: $commitMessage"

          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è Python
          $env:PYTHONIOENCODING = "utf-8"
          Write-Host "‚úÖ Set PYTHONIOENCODING to utf-8."

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤ Python
          & "C:\Python27\python.exe" -c "import sys; print('Python default encoding: ' + sys.getdefaultencoding())"
          & "C:\Python27\python.exe" -c "import sys; print('Python stdout encoding: ' + sys.stdout.encoding)"
          & "C:\Python27\python.exe" -c "import sys; print('Python file system encoding: ' + sys.getfilesystemencoding())"

      # –®–∞–≥ 6: –£–≥–ª—É–±–ª—ë–Ω–Ω—ã–π –¥–µ–±–∞–≥ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      - name: Deep debug and test variables
        shell: pwsh
        run: |
          Write-Host "Deep debugging variables:"
          Write-Host "Commit hash: ${{ steps.push-details.outputs.commit_hash }}"
          Write-Host "Commit message: ${{ steps.push-details.outputs.commit_message }}"
          Write-Host "Changed files: ${{ steps.push-details.outputs.changed_files }}"
          Write-Host "Is release: ${{ steps.check_commit.outputs.is_release }}"
          Write-Host "Is all: ${{ steps.check_commit.outputs.is_all }}"