name: üßπ Cleanup Workflow Runs

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: '–¢–æ–ª—å–∫–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (true/false)'
        required: false
        default: 'false'
      target_statuses:
        description: '–°—Ç–∞—Ç—É—Å—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (completed, failure –∏ –¥—Ä.)'
        required: false
        default: 'completed,failure,cancelled'
      exclude_workflows:
        description: '–ò—Å–∫–ª—é—á–∏—Ç—å workflow –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º'
        required: false

  schedule:
    - cron: "0 4 * * *" # 07:00 –ú–°–ö

jobs:
  cleanup:
    runs-on: ubuntu-latest
    env:
      KEEP_LAST: 3
      LIMIT_PER_WORKFLOW: 100

    steps:
      - name: üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        run: |
          echo "üîÑ –ó–∞–ø—É—Å–∫: $(date +'%d.%m.%Y %H:%M')"
          echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}"
          echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
          echo "- –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: ${{ inputs.dry_run }}"
          echo "- –£–¥–∞–ª—è–µ–º—ã–µ —Å—Ç–∞—Ç—É—Å—ã: ${{ inputs.target_statuses }}"
          echo "- –ò—Å–∫–ª—é—á–µ–Ω–∏—è: ${{ inputs.exclude_workflows }}"

      - name: üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∑–∞–ø—É—Å–∫–æ–≤
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö workflow
          workflows=$(gh api repos/${{ github.repository }}/actions/workflows | jq -r '.workflows[] | "\(.id)|\(.name)"')

          echo "$workflows" | while IFS='|' read -r wf_id wf_name; do
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            if [[ "${{ inputs.exclude_workflows }}" == *"$wf_name"* ]]; then
              echo "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫: $wf_name"
              continue
            fi

            echo "üîç –û–±—Ä–∞–±–æ—Ç–∫–∞: $wf_name (ID: $wf_id)"
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
            runs=$(gh api "repos/${{ github.repository }}/actions/workflows/$wf_id/runs?per_page=$LIMIT_PER_WORKFLOW&status=completed" | 
              jq -r --arg statuses "${{ inputs.target_statuses }}" \
              '.workflow_runs[] | select(.status as $s | $s == ($ARGS.named.statuses | split(",")[])) | "\(.id)|\(.status)|\(.created_at)"')

            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
            to_delete=$(echo "$runs" | sort -t'|' -k3 -r | tail -n +$(($KEEP_LAST + 1)))

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            echo "–í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤: $(echo "$runs" | wc -l)"
            echo "–°–æ—Ö—Ä–∞–Ω—è–µ–º: $KEEP_LAST"
            echo "–£–¥–∞–ª—è–µ–º: $(echo "$to_delete" | wc -l)"

            # –£–¥–∞–ª–µ–Ω–∏–µ
            if [ -n "$to_delete" ]; then
              echo "$to_delete" | while IFS='|' read -r run_id status date; do
                echo "üöÆ –£–¥–∞–ª–µ–Ω–∏–µ: ID $run_id (—Å—Ç–∞—Ç—É—Å: $status, –¥–∞—Ç–∞: $date)"
                if [ "${{ inputs.dry_run }}" = "false" ]; then
                  gh api -X DELETE "repos/${{ github.repository }}/actions/runs/$run_id"
                fi
              done
            fi
            echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
          done

      - name: üìà –ò—Ç–æ–≥–∏
        if: always()
        run: |
          echo "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: $(date +'%H:%M:%S')"
          echo "–°—Å—ã–ª–∫–∞: https://github.com/${{ github.repository }}/actions"
